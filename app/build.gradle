apply plugin: 'com.android.application'
Properties configProp = new Properties()
configProp.load(new FileInputStream(file("$rootDir/config.properties")))
android {
    compileSdkVersion "${rootProject.ext.android.compileSdkVersion}" as Integer
    buildToolsVersion "${rootProject.ext.android.buildToolsVersion}"
    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion as Integer
        targetSdkVersion rootProject.ext.android.targetSdkVersion as Integer
        applicationId "com.salton123.musicdownloader"
        versionName rootProject.ext.android.versionName
        versionCode rootProject.ext.android.versionCode as Integer
        ndk {
            abiFilters "armeabi-v7a"
        }
    }
    signingConfigs {
        release {
            keyAlias configProp['keystore.keyAlias']
            keyPassword configProp['keystore.keyPassword']
            storeFile file(configProp['keystore.storeFile'])
            storePassword configProp['keystore.storePassword']
            // 使用旧版签名，禁用V2版签名模式
            v2SigningEnabled false
        }
    }
    android {
        compileOptions {
            sourceCompatibility 1.8
            targetCompatibility 1.8
        }
    }

    buildTypes {
        debug {
            versionNameSuffix '00'
            signingConfig signingConfigs.release
//            minifyEnabled true
//            shrinkResources true
//            zipAlignEnabled true
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            if (variant.buildType == "release") {
                outputFileName = "bb" + "_release_time_" + releaseTime() + ".apk"
            }
            if (variant.buildType == "debug") {
                outputFileName = "bb" + "_debug_time_" + releaseTime() + ".apk"
            }
        }
    }
}

def releaseTime() {
    return new Date().format("yyyyMMddHHmmss")
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    api project(":corelite")
    api project(":kmusic")
    api 'com.zhy:base-rvadapter:3.0.3'
}
