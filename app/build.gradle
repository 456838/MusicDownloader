apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'
//apply plugin: 'blockcanaryex'
// 加载config.properties文件
Properties configProp = new Properties()
configProp.load(new FileInputStream(file("$rootDir/config.properties")))


android {
    compileSdkVersion "${rootProject.ext.android.compileSdkVersion}" as Integer
    buildToolsVersion "${rootProject.ext.android.buildToolsVersion}"
    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion as Integer
        targetSdkVersion rootProject.ext.android.targetSdkVersion as Integer
        applicationId "com.salton123.musicdownloader"
        versionCode 1
        versionName "1.0.0"
        ndk {
            abiFilters "armeabi-v7a"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    signingConfigs {
        release {
            keyAlias configProp['keystore.keyAlias']
            keyPassword configProp['keystore.keyPassword']
            storeFile file(configProp['keystore.storeFile'])
            storePassword configProp['keystore.storePassword']
            // 使用旧版签名，禁用V2版签名模式
            v2SigningEnabled false
        }
    }

    buildTypes {
        debug {
            versionNameSuffix '00'
            signingConfig signingConfigs.release
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            if (variant.buildType == "release") {
                outputFileName = "oppo_f15" + "_release_time_" + releaseTime() + ".apk"
            }
        }
    }
//    sourceSets {
//        main {
//            if ("${rootProject.ext.dependVersion.appLanguage}" == "zh") {
//                assets.srcDirs = ['src/main/assets']
//                res.srcDirs = ['src/main/res', 'src/main/res_base']
//            } else if ("${rootProject.ext.dependVersion.appLanguage}" == "pro-en") {
//                assets.srcDirs = ['src/main/assets_pro_en']
//                res.srcDirs = ['src/main/res_pro_en', 'src/main/res_base']
//            } else if ("${rootProject.ext.dependVersion.appLanguage}" == "pro") {
//                assets.srcDirs = ['src/main/assets_pro']
//                res.srcDirs = ['src/main/res_pro', 'src/main/res_base']
//                java.srcDirs = ['src/main/java', 'src/main/java_pro']
//            }
//            println "res dirs=" + res.getSrcDirs() + ", assets dirs=" + assets.getSrcDirs()
//        }
//    }
}

def releaseTime() {
    return new Date().format("yyyyMMddHHmmss")
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$properyVersion.kotlinVersion"
    implementation 'com.tencent.bugly:crashreport_upgrade:1.3.5'
    implementation 'com.tencent.bugly:nativecrashreport:3.3.1'
    implementation 'me.weyye.hipermission:library:1.0.7'
}
